package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	botToken := os.Getenv("BOT_TOKEN")
	if botToken == "" {
		log.Fatal("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
	}

	bot, err := tgbotapi.NewBotAPI(botToken)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: %v", err)
	}

	log.Printf("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @%s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		}

		text := update.Message.Text
		chatID := update.Message.Chat.ID

		switch {
		case text == "/start":
			msg := tgbotapi.NewMessage(chatID,
				"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å YouTube –∏ Instagram.\n\n" +
					"–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É –≤—ã–±—Ä–∞—Ç—å ‚Äî —Å–∫–∞—á–∞—Ç—å üé• –≤–∏–¥–µ–æ –∏–ª–∏ üéµ –∞—É–¥–∏–æ.")
			bot.Send(msg)

		case text == "/help":
			msg := tgbotapi.NewMessage(chatID,
				"üìò –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
					"/start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n" +
					"/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞\n\n" +
					"–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —Å YouTube –∏–ª–∏ Instagram Reels.")
			bot.Send(msg)

		case strings.Contains(text, "youtube.com") || strings.Contains(text, "youtu.be") || strings.Contains(text, "instagram.com"):
			// –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
			videoBtn := tgbotapi.NewKeyboardButton("üé• –í–∏–¥–µ–æ")
			audioBtn := tgbotapi.NewKeyboardButton("üéµ –ê—É–¥–∏–æ")
			keyboard := tgbotapi.NewReplyKeyboard([]tgbotapi.KeyboardButton{videoBtn, audioBtn})
			msg := tgbotapi.NewMessage(chatID, "–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å?")
			msg.ReplyMarkup = keyboard
			bot.Send(msg)

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
			go func(link string, chat int64) {
				for upd := range updates {
					if upd.Message == nil {
						continue
					}

					choice := upd.Message.Text
					if choice == "üé• –í–∏–¥–µ–æ" || choice == "üéµ –ê—É–¥–∏–æ" {
						bot.Send(tgbotapi.NewMessage(chat, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ..."))

						format := "best"
						if choice == "üéµ –ê—É–¥–∏–æ" {
							format = "bestaudio"
						}

						fileName := "output"
						cmd := exec.Command("yt-dlp", "-f", format, "-o", fileName+".%(ext)s", link)
						output, err := cmd.CombinedOutput()
						if err != nil {
							bot.Send(tgbotapi.NewMessage(chat, fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ yt-dlp: %v\n%s", err, string(output))))
							return
						}

						// –ù–∞–π–¥–µ–º —Ñ–∞–π–ª –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
						var ext string
						if choice == "üé• –í–∏–¥–µ–æ" {
							ext = ".mp4"
						} else {
							ext = ".m4a"
						}

						filePath := fileName + ext
						video := tgbotapi.NewDocument(chat, tgbotapi.FilePath(filePath))
						bot.Send(video)

						os.Remove(filePath)
						return
					}
				}
			}(text, chatID)

		default:
			msg := tgbotapi.NewMessage(chatID, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ /help, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.")
			bot.Send(msg)
		}
	}
}
